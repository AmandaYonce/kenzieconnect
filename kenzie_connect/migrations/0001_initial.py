# Generated by Django 3.1.2 on 2020-10-09 00:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField(default=18)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('NonBinary', 'NonBinary'), ('Other', 'Other')], default='Male', max_length=20)),
                ('bio', models.CharField(max_length=1000)),
                ('sexual_preference', models.CharField(choices=[('Straight', 'Straight'), ('Gay', 'Gay'), ('Bisexual', 'Bisexual'), ('Other', 'Other')], default='Straight', max_length=20)),
                ('email', models.URLField(blank=True, null=True)),
                ('displayname', models.CharField(default='', max_length=60)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_pet', models.CharField(choices=[('Dog', 'Dog'), ('Cat', 'Cat'), ('Dogs and Cats', 'Dogs and Cats'), ('No Pets', 'No Pets')], default='No Pets', max_length=20)),
                ('question_food', models.BooleanField(default=True)),
                ('question_date', models.CharField(max_length=30)),
                ('question_activity', models.CharField(max_length=30)),
                ('question_star', models.CharField(max_length=30)),
                ('question_booze', models.CharField(max_length=30)),
                ('question_pjs', models.CharField(max_length=30)),
                ('question_sleep', models.BooleanField()),
                ('question_mind', models.CharField(max_length=30)),
                ('question_dog', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Penpal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('penpal_message', models.CharField(max_length=500)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user_fk', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_user_fk', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
